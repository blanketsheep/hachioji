@mixin tag-layout-breakpoint($layout: default) {
  #tag_header {
    .main {
      >.container {
        @include container;
      }
      .top,
      .bottom {
        @if $layout == default or $layout == tablet {
          @include prefix(2);
        } @else if $layout == phablet {
          @include prefix(1);
        }
      }
    }
  }
  //$right-span: map-get($tag-lr, right-span);
  $right-span: map-get($sidebar-right-span, $layout);
  $left-span:  susy-get(columns) - $right-span;
  #content {
    >.container {
      @include container;
      @if $layout == phablet or $layout == phone {
        #right {
          display:none;
        }
      } @else {
        #left {
          @include span($left-span);
        }
      }
      #right {
        @include span($right-span);
      }
    }
  }
  #left {
    //$left-span: susy-get(columns) - map-get($tag-lr,right-span);
    #articles {
      >.container {
        @include container($left-span);
      }
      .article {
        $span: $left-span / 3;
        @if $layout == tablet {
          $span: $left-span / 2;
        } @else if $layout == phablet or $layout == phone {
          $span: $left-span;
        }
        @if $layout != phablet and $layout != phone {
          @include gallery($span of $left-span);
        }
      }
    }
  }
}

& {
  margin-top:-( rhythm($header-rhythm) );
}
& {
  @include breakpoint($layout-default-breakpoint) {
    @include tag-layout-breakpoint(default);
  }
  @include susy-breakpoint($layout-tablet-breakpoint, $layout-tablet) {
    @include tag-layout-breakpoint(tablet);
  }
  @include susy-breakpoint($layout-phablet-breakpoint, $layout-phablet) {
    @include tag-layout-breakpoint(phablet);
  }
  @include susy-breakpoint($layout-phone-breakpoint, $layout-phone) {
    @include tag-layout-breakpoint(phone);
  }
}
#tag_header {
  $rhythm: map-get($tag-header,height);
  background-color: map-get($tag-header, background-color);
  @include fontreset(1rem,false,false);
  >.container {
    position:relative;
    //height: rhythm($rhythm);
  }
  .background {
    position:absolute;
    top:0;left:0;right:0;bottom:0;
    @include background-size(cover);
    background-position: center center;
  }
  .main {
    position:relative;
    @include padding-leader(4);
    //@include padding-trailer(1);
    color: map-get($tag-header, color);
    @include text-shadow;
    >.container {
      
    }
    .top,
    .bottom {
      //@include prefix(2);
    }
    .top {
      h1 {
        @include adjust-font-size-to(2.25rem);
      }
    }
    .bottom {
      @include padding-leader(1);
      @include padding-trailer(1);
      .text {
        @include gutters;
        @include adjust-font-size-to(1.25rem);
      }
    }
  }
}
#content {
  @include padding-leader(1);
  @include padding-trailer(1);
}

#right {
  >.container {
    @include prefix(1);
  }
}