$header-top-rhythm:20;
$header-icon-wrap-rhythm:5;

@mixin writer-single-layout-breakpoint($layout: default) {
  >.container>.header {
    @if $layout == phone {
      $header-top-rhythm: 12;
    }
    >.container {
      >.top {
        >.container {
          height:rhythm($header-top-rhythm);
        }
      }
      >.bottom {
        $icon-size:rhythm($header-icon-wrap-rhythm);
        & {
          margin-top:-($icon-size / 2);
        }
        .icon {
          $size:$icon-size;
          width:$size;
          height:$size;
        }
      }
    }
  }
  >.container>.columns {
    @include container;
    $max-span:susy-get(columns);
    
    $right-span:8;
    
    @if $layout == phablet {
      $right-span: 3;
    }
    @if $layout == phone {
      $right-span: 1;
    }
    
    $left-span:$right-span;
    
    $main-span:$max-span - ($left-span + $right-span);
    >.left {
      @include span($left-span of $max-span);
    }
    >.main {
      >.container {
        @include prefix($left-span);
        @include suffix($right-span);
      }
    }
    >.right {
      @include span($right-span of $max-span);
    }
  }
  #articles {
    >.container {
      @include container;
    }
    .article {
      $max-span:susy-get(columns);
      $span:$max-span / 4;
      @if $layout == phablet {
        $span: $max-span / 2;
      } @else if $layout == phone {
        $span: $max-span;
      }
      
      @if $layout != phone {
        @include gallery($span of $max-span);
      }
    }
  }
}

& {
  @include breakpoint($layout-default-breakpoint) {
    @include writer-single-layout-breakpoint(default);
  }
  @include susy-breakpoint($layout-tablet-breakpoint, $layout-tablet) {
    @include writer-single-layout-breakpoint(tablet);
  }
  @include susy-breakpoint($layout-phablet-breakpoint, $layout-phablet) {
    @include writer-single-layout-breakpoint(phablet);
  }
  @include susy-breakpoint($layout-phone-breakpoint, $layout-phone) {
    @include writer-single-layout-breakpoint(phone);
  }
}
& {
  margin-top:-( rhythm($header-rhythm) );
  >.container {
    
  }
  >.container>.header {
    >.container {
      >.top {
        >.container {
          position:relative;
        }
        .image {
          position:absolute;
          top:0;left:0;right:0;bottom:0;
          background-position:center center;
          @include background-size(cover);
          img {
            display:none;
          }
          /*
          & {
            background-image:url('../images/kouki.jpg') !important;
          }
          */
        }
      }
      >.bottom {
        @include padding-trailer(1);
        @include fontreset(1em,true,false);
        .icon {
          display:block;
          margin:0 auto;
          position:relative;
          .container {
            position:absolute;
            top:0;left:0;right:0;bottom:0;
            display:block;
            background-position:center center;
            @include background-size(cover);
            @include border-radius(50%);
            border:solid 3px $writer-single-icon-border-color;
            background-color:$writer-single-icon-background-color;
          }
          img {
            display:none;
          }
        }
        h1,h2 {
          text-align:center;
        }
        h1 {
          @include rhythm(1);
        }
        h2 {
          @include adjust-font-size-to($base-font-size * .9);
          font-weight:normal;
          .item {
            @include gutters;
            &:not(:first-child):before {
              //content:':';
            }
          }
        }
      }
    }
  }
  >.container>.columns {
    >.left,
    >.right {
      display:none;
    }
    >.left {
      //@include span($left-span of $max-span);
      //display:none;
    }
    >.main {
      //@include span($main-span of 40);
      >.container {
        //@include pad(1);
        //@include prefix($left-span);
        //@include suffix($right-span);
        @include fontreset(1em,false,true);
      }
      @include padding-trailer(3);
    }
    >.right {
      //@include span($right-span of $max-span);
      .article {
        //@import 'partials/article';
        //@include gallery(10 of 30);
      }
    }
  }
  #articles {
    @include padding-trailer(5);
    >.container {
      //@include container;
    }
    .article {
      /*
      $max-span:susy-get(columns);
      $span:$max-span / 4;
      @include gallery($span of $max-span);
      */
    }
  }
}