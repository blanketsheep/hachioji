@mixin home-layout-breakpoint($layout: default) {
  $right-span: map-get($sidebar-right-span, $layout);
  $left-span:  susy-get(columns) - $right-span;
  #slide {
    $rhythm:18;
    @if $layout == phone or $layout == phablet {
      $rhythm: 8;
    }
    $rhythm:$rhythm + $header-rhythm;
    $height:rhythm($rhythm);
    >.container {
      >.background,
      >.items {
        height:$height;
      }
    }
    .slide_item {
      >.container {
        height:$height;
      }
      .main {
        $hRhythm:$rhythm;
        $height:rhythm($hRhythm);
        >.container {
          height:$height;
        }
        .thumbnail {
          >.container {
            height:$height;
            width:($height * 16) / 9;
          }
        }
      }
    }
    @if $layout == phablet or $layout == phone {
      
    }
  }
  #content {
    >.container {
      @include container;
    }
    #left {
      @include span($left-span nest);
    }
    #right {
      @include span($right-span);
      @if $layout == phablet or $layout == phone {
        display:none;
      }
    }
    #articles {
      .article {
        $span:$left-span / 3;
        @if $layout == tablet {
          $span: $left-span / 2;
        } @else if $layout == phablet or $layout == phone {
          $span: $left-span;
        }
        @if $layout == default or $layout == tablet {
          @include gallery($span of $left-span);
        }
      }
    }
  }
}

& {
  @include breakpoint($layout-default-breakpoint) {
    @include home-layout-breakpoint(default);
  }
  @include susy-breakpoint($layout-tablet-breakpoint, $layout-tablet) {
    @include home-layout-breakpoint(tablet);
  }
  @include susy-breakpoint($layout-phablet-breakpoint, $layout-phablet) {
    @include home-layout-breakpoint(phablet);
  }
  @include susy-breakpoint($layout-phone-breakpoint, $layout-phone) {
    @include home-layout-breakpoint(phone);
  }
}
& {
  margin-top:-( rhythm($header-rhythm) );
  #slide {
    //height:$slide-height;
    background-color:$slide-background-color;
    >.container {
      overflow:hidden;
      &,
      >.background,
      >.items {
        position:relative;
      }
      >.background {
        display:none;
        background-position:center center;
        @include background-size(cover);
      }
    }
    .slide_item {
      position:absolute;
      top:0;left:0;right:0;bottom:0;
      & {
        @include single-text-shadow;
        color:$slide-color;
      }
      >.container {
        position:relative;
        overflow:hidden;
      }
      .background,
      .main {
        position:absolute;
        top:0;left:0;right:0;bottom:0;
      }
      .background {
        //$blur:5px;
        background-position:center center;
        @include background-size(cover);
        //@include filter( blur($blur) );
        //margin:-($blur);
        img {
          display:none;
        }
      }
      .main {
        @include fontreset(1rem,false,false);
        /*
        $hPad: $header-rhythm + 1;
        $hRhythm:$rhythm - ($hPad * 2);
        */
        
        >.container {
          /*
          @include padding-leader($hPad);
          @include padding-trailer($hPad);
          */
          @include container;
        }
        .thumbnail {
          display:none;
          >.container {
            margin:0 auto;
            background-position:center center;
            @include background-size(cover);
          }
        }
        h1 {
          @include leader(9);
          @include adjust-font-size-to($base-font-size * 2);
          max-width:span(20);
        }
        .text {
          @include leader(2);
          @include adjust-font-size-to($base-font-size * 1.25);
          max-width:span(16);
        }
      }
    }
    & .slide_item:not([data-item-key]) {
      display:none;
    }
    & .slide_item[data-item-key] {
      & {
        @include experimental('animation-duration',2s);
        //@include experimental('animation-delay',10s);
        @include experimental('animation-timing-function',ease);
        @include experimental('animation-fill-mode',both);
      }
    }
    &:not([data-is-first]) .slide_item[data-item-key] {
      &[data-is-visible] {
        //@include scale(1,1);
        @include experimental('animation-name',show_slide_item);
      }
      &:not([data-is-visible]) {
        //@include scale(.75,.75);
        @include experimental('animation-name',hide_slide_item);
      }
      /*
      &[data-is-visible],
      &[data-is-visible] + &:not([data-is-visible]) {
        @include single-transition(left right);
      }
      */
    }
    /*
    &:not([data-is-first]) .slide_item[data-item-key] {
      .main {
        @include transition(
          text-shadow $default-transition-duration $default-transition-function 2s,
          //background-color $default-transition-duration $default-transition-function 2s
          color $default-transition-duration $default-transition-function 2s
        );
      }
    }
    .slide_item[data-item-key][data-is-visible] {
      .main {
        @include single-text-shadow($default-text-shadow-h-offset,$default-text-shadow-v-offset,$default-text-shadow-blur);
        //background-color:rgba(0,0,0,.5);
        color:transparentize($slide-color,0);
      }
    }
    .slide_item[data-item-key]:not([data-is-visible]) {
      .main {
        //@include single-text-shadow(0,0,0,0);
        //background-color:rgba(0,0,0,0);
        color:transparentize($slide-color,1);
      }
    }
    */
    & {
      @include single-transition(opacity);
    }
    &:not([data-item-length]) {
      opacity:0;
    }
    &[data-item-length] {
      opacity:1;
    }
  }
  #content {
    /*
    $right-span:12;
    $left-span:susy-get(columns) - $right-span;
    */
    >.container {
      //@include container;
      //min-height:1500px;
    }
    #left {
      //@include span($left-span nest);
    }
    #right {
      //@include span($right-span);
      >.container {
        @include prefix(1);
      }
    }
    #articles {
      .article {
        //@import 'partials/article';
        /*
        $span:$left-span / 3;
        @include gallery($span of $left-span);
        */
      }
    }
  }
  #writers {
    //padding:$writers-vertical-padding 0;
    //@include rhythm;
    @include rhythm(1);
    .writer {
      //@import 'partials/writer';
    }
  }
}
